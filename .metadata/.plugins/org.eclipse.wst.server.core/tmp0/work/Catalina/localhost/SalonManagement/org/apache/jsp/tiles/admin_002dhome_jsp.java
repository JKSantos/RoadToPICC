/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2016-12-06 17:00:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tiles;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_002dhome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"wrapper\" ng-controller=\"dashBoardController as vm\">\r\n");
      out.write("    <div class=\"main transparent\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col s4\">\r\n");
      out.write("                <div class=\"card purple\">\r\n");
      out.write("                    <div class=\"card-content white-text\">\r\n");
      out.write("                        <span class=\"card-title\">&#8369; Total Sales</span>\r\n");
      out.write("                        <div ng-if=\"vm.week == false\">\r\n");
      out.write("                            <span class=\"card-title\"><b>{{vm.totalSalesThisWeek | currency: \"Php \"}}</b></span><br> for\r\n");
      out.write("                            this <b>WEEK</b>.\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div ng-if=\"vm.week == true\">\r\n");
      out.write("                            <span class=\"card-title\"><b>{{vm.totalSalesThisMonth | currency: \"Php \"}}</b></span><br> for\r\n");
      out.write("                            this <b>MONTH</b>.\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-action purple darken-3\">\r\n");
      out.write("                        <div class=\"switch\">\r\n");
      out.write("                            <label>\r\n");
      out.write("                                <b>WEEK</b>\r\n");
      out.write("                                <input type=\"checkbox\" ng-model=\"vm.week\">\r\n");
      out.write("                                <span class=\"lever\"></span>\r\n");
      out.write("                                <b>MONTH</b>\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col s4\">\r\n");
      out.write("                <div class=\"card green\">\r\n");
      out.write("                    <div class=\"card-content white-text\">\r\n");
      out.write("                        <span class=\"card-title\">\r\n");
      out.write("                            <i class=\"material-icons center-align\">group_add</i>Total Clients</span>\r\n");
      out.write("                        <div ng-if=\"vm.client == false\">\r\n");
      out.write("                            <span class=\"card-title\"><b>{{vm.totalClientsThisWeek | number: 0}}</b></span><br> for\r\n");
      out.write("                            this <b>WEEK</b>.\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div ng-if=\"vm.client == true\">\r\n");
      out.write("                            <span class=\"card-title\"><b>{{vm.totalClientsThisMonth | number: 0}}</b></span><br> for\r\n");
      out.write("                            this <b>MONTH</b>.\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-action green darken-3\">\r\n");
      out.write("                        <div class=\"switch\">\r\n");
      out.write("                            <label>\r\n");
      out.write("                                <b>WEEK</b>\r\n");
      out.write("                                <input type=\"checkbox\" ng-model=\"vm.client\">\r\n");
      out.write("                                <span class=\"lever\"></span>\r\n");
      out.write("                                <b>MONTH</b>\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col s4\">\r\n");
      out.write("                <div class=\"card blue-grey darken-2\">\r\n");
      out.write("                    <div class=\"card-content white-text\">\r\n");
      out.write("                        <span class=\"card-title\">{{vm.date}}</span>\r\n");
      out.write("                        <h3>{{ clock | date: 'h:mm:ss a'}}</h3>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col s12\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <div id=\"container\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
